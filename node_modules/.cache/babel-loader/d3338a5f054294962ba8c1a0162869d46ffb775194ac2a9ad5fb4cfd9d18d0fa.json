{"ast":null,"code":"var _jsxFileName = \"/Users/mazlanmusa/Documents/Development/monsters-rolodex/src/App.js\";\nimport { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: []\n    };\n    console.log('constructor');\n  }\n  componentDidMount() {\n    console.log('component did mount');\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState(() => {\n      return {\n        monsters: users\n      };\n    }, () => {\n      console.log(this.state);\n    }));\n  }\n  render() {\n    console.log('render');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-box\",\n        type: \"search\",\n        placeholder: \"search monsters\",\n        onChange: event => {\n          console.log({\n            startingArray: this.state.monsters\n          });\n          const searchString = event.target.value.toLocaleLowerCase();\n          const filteredMonsters = this.state.monsters.filter(monster => {\n            return monster.name.toLocaleLowerCase().includes(searchString);\n          });\n          this.setState(() => {\n            return {\n              monsters: filteredMonsters\n            };\n          }, () => {\n            console.log({\n              endingArray: this.state.monsters\n            });\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), this.state.monsters.map(monster => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: monster.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 42\n          }, this)\n        }, monster.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 20\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Component","logo","App","constructor","state","monsters","console","log","componentDidMount","fetch","then","response","json","users","setState","render","event","startingArray","searchString","target","value","toLocaleLowerCase","filteredMonsters","filter","monster","name","includes","endingArray","map","id"],"sources":["/Users/mazlanmusa/Documents/Development/monsters-rolodex/src/App.js"],"sourcesContent":["import { Component } from 'react';\n\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n    };\n    console.log('constructor');\n  }\n\n  componentDidMount(){\n    console.log('component did mount');\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState(() => {\n        return {\n          monsters: users\n        }\n      }, \n      () => {\n        console.log(this.state);\n      }))\n  }\n\n  render () {\n    console.log('render');\n    return (\n      <div className='App'>\n        <input \n          className='search-box'\n          type='search'\n          placeholder='search monsters'\n          onChange={(event) => {\n            console.log({ startingArray: this.state.monsters } );\n            const searchString = event.target.value.toLocaleLowerCase();\n            const filteredMonsters = this.state.monsters.filter((monster) => {\n              return monster.name.toLocaleLowerCase().includes(searchString);\n            });\n\n            this.setState(\n              () => {\n                return { monsters: filteredMonsters };\n              },\n              () => {\n                console.log({ endingArray: this.state.monsters } );\n              }\n            );\n        }} />\n        {\n          this.state.monsters.map((monster) => {\n            return <div key={monster.id}><h1>{monster.name}</h1></div>\n          })\n        }\n      </div>\n    );\n  } \n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAAC;AAEnB,MAAMC,GAAG,SAASF,SAAS,CAAC;EAC1BG,WAAW,GAAG;IACZ,KAAK,EAAE;IAEP,IAAI,CAACC,KAAK,GAAG;MACXC,QAAQ,EAAE;IACZ,CAAC;IACDC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC5B;EAEAC,iBAAiB,GAAE;IACjBF,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClCE,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,KAAK,IAAK,IAAI,CAACC,QAAQ,CAAC,MAAM;MACnC,OAAO;QACLT,QAAQ,EAAEQ;MACZ,CAAC;IACH,CAAC,EACD,MAAM;MACJP,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,KAAK,CAAC;IACzB,CAAC,CAAC,CAAC;EACP;EAEAW,MAAM,GAAI;IACRT,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB,oBACE;MAAK,SAAS,EAAC,KAAK;MAAA,wBAClB;QACE,SAAS,EAAC,YAAY;QACtB,IAAI,EAAC,QAAQ;QACb,WAAW,EAAC,iBAAiB;QAC7B,QAAQ,EAAGS,KAAK,IAAK;UACnBV,OAAO,CAACC,GAAG,CAAC;YAAEU,aAAa,EAAE,IAAI,CAACb,KAAK,CAACC;UAAS,CAAC,CAAE;UACpD,MAAMa,YAAY,GAAGF,KAAK,CAACG,MAAM,CAACC,KAAK,CAACC,iBAAiB,EAAE;UAC3D,MAAMC,gBAAgB,GAAG,IAAI,CAAClB,KAAK,CAACC,QAAQ,CAACkB,MAAM,CAAEC,OAAO,IAAK;YAC/D,OAAOA,OAAO,CAACC,IAAI,CAACJ,iBAAiB,EAAE,CAACK,QAAQ,CAACR,YAAY,CAAC;UAChE,CAAC,CAAC;UAEF,IAAI,CAACJ,QAAQ,CACX,MAAM;YACJ,OAAO;cAAET,QAAQ,EAAEiB;YAAiB,CAAC;UACvC,CAAC,EACD,MAAM;YACJhB,OAAO,CAACC,GAAG,CAAC;cAAEoB,WAAW,EAAE,IAAI,CAACvB,KAAK,CAACC;YAAS,CAAC,CAAE;UACpD,CAAC,CACF;QACL;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,EAEH,IAAI,CAACD,KAAK,CAACC,QAAQ,CAACuB,GAAG,CAAEJ,OAAO,IAAK;QACnC,oBAAO;UAAA,uBAAsB;YAAA,UAAKA,OAAO,CAACC;UAAI;YAAA;YAAA;YAAA;UAAA;QAAM,GAAnCD,OAAO,CAACK,EAAE;UAAA;UAAA;UAAA;QAAA,QAA+B;MAC5D,CAAC,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAEA;EAEV;AACF;AAEA,eAAe3B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}